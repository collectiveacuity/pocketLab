{
  "schema": {
    "service_name": "lab",
    "service_path": "~/lab",
    "service_list": [ "lab" ],
    "service_option": [ "lab" ],
    "vcs_service": "git",
    "resource_type": "services",
    "virtualbox": "default",
	"container_alias": "server",
    "image_name": "flaskserver",
    "module_name": "pocketlab",
    "platform_name": "heroku",
    "license_type": "MIT",
    "environment_type": "prod",
    "resource_tag": "20170615",
    "region_name": "us-east-1",
    "static_folder": "site/",
    "app_folder": "server/",
    "verbose": true,
    "all": true,
    "overwrite": true,
    "init_heroku": true,
    "init_aws": true,
    "print_path": true,
    "paginate": true
  },
  "components": {
    ".service_name": {
      "field_description": "Name of service in lab registry",
      "default_value": "",
      "max_length": 64,
      "must_not_contain": [ "[^\\w\\-_]", "^\\d", "^\\-", "\\-$" ],
      "field_metadata": {
        "cli_flag": [ "-s", "--service" ],
        "cli_help": "name of service in lab registry",
        "cli_metavar": "SERVICE"
      }
    },
    ".service_path": {
      "field_description": "Path to service root on localhost",
      "default_value": "",
      "field_metadata": {
        "cli_flags": [ "--path" ],
        "cli_help": "path to service root"
      }
    },
    ".service_list": {
      "field_description": "List of services in lab registry.",
      "min_size": 0,
      "field_metadata": {
        "cli_flag": [ "-s", "--services" ],
        "cli_help": "list of services in lab registry",
        "cli_metavar": "SERVICES"
      }
    },
    ".service_list[0]": {
      "field_description": "Service in list of services from lab registry",
      "default_value": "",
      "max_length": 64,
      "must_not_contain": [ "[^\\w\\-_]" ]
    },
    ".service_option": {
      "field_description": "(Optional) service in lab registry.",
      "min_size": 0,
      "max_size": 1,
      "field_metadata": {
        "cli_flag": [ "-s", "--services" ],
        "cli_help": "(optional) service in lab registry",
        "cli_metavar": "SERVICE"
      }
    },
    ".service_option[0]": {
      "field_description": "Service in list of services from lab registry",
      "default_value": "",
      "max_length": 64,
      "must_not_contain": [ "[^\\w\\-_]" ]
    },
    ".vcs_service": {
      "field_description": "Version control system used by service",
      "default_value": "",
      "discrete_values": [ "", "git", "Git", "mercurial", "Mercurial" ],
      "field_metadata": {
        "cli_flags": [ "--vcs" ],
        "cli_help": "VCS service to generate ignore file"
      }
    },
    ".resource_type": {
      "field_description": "Type of lab resource. eg. services, images...",
      "default_value": "services",
      "discrete_values": [ "services" ],
      "field_metadata": {
        "cli_flags": [ "--resource" ],
        "cli_help": "type of lab resource. eg. services, images...",
        "cli_metavar": "RESOURCE"
      }
    },
    ".virtualbox": {
      "field_description": "Name of virtualbox image in which to run service.",
      "default_value": "default",
      "max_length": 64,
      "field_metadata": {
        "cli_flags": [ "--virtualbox" ],
        "cli_help": "name of docker virtualbox on Win7/8 (default: %(default)s)"
      }
    },
    ".container_alias": {
      "field_description": "Docker container alias for service",
      "default_value": "",
      "max_length": 64,
      "must_not_contain": [ "[^\\w\\-_]", "^\\d", "^\\-", "\\-$" ],
      "field_metadata": {
        "cli_flags": [ "--container" ],
        "cli_help": "alias of docker container for service"
      }
    },
    ".image_name": {
      "field_description": "Docker image name for service",
      "max_length": 64,
      "must_contain": [ "^[a-z\\d\\-:_/]+$" ],
      "must_not_contain": [ "^\\d", "^\\-", "\\-$" ],
      "field_metadata": {
        "cli_flags": [ "--image" ],
        "cli_help": "name of docker image for service"
      }
    },
    ".module_name": {
      "field_description": "Python module name",
      "max_length": 64,
      "must_contain": [ "^[a-zA-Z\\d\\-]+$" ],
      "must_not_contain": [ "^\\d", "^\\-", "\\-$" ],
      "field_metadata": {
        "cli_flags": [ "--module" ],
        "cli_help": "name for python module"
      }
    },
    ".platform_name":{
      "field_description": "Name of platform to host service.",
      "discrete_values": [ "heroku", "ec2" ],
      "field_metadata": {
        "cli_flags": [ "--platform" ],
        "cli_help": "name of remote platform",
        "cli_metavar": "PLATFORM"
      }
    },
    ".license_type": {
      "field_description": "Type of software license terms for source code.",
      "default_value": "MIT",
      "discrete_values": [ "MIT", "mit" ],
      "field_metadata": {
        "cli_flags": [ "--license" ],
        "cli_help": "name of software license type"
      }
    },
    ".environment_type":{
      "field_description": "Type of development environment.",
      "field_metadata": {
        "cli_flags": [ "--env" ],
        "cli_help": "type of development environment"
      }
    },
    ".resource_tag": {
      "field_description": "Tag value associated with resource.",
      "field_metadata": {
        "cli_flags": [ "--tag" ],
        "cli_help": "tag associated with resource"
      }
    },
    ".region_name": {
      "field_description": "Name of remote host platform region.",
      "field_metadata": {
        "cli_flags": [ "--region" ],
        "cli_help": "name of platform region"
      }
    },
    ".static_folder": {
      "field_description": "Path to static index.html site folder.",
      "field_metadata": {
        "cli_group": "A",
        "cli_flags": [ "--static" ],
        "cli_help": "path to static site folder"
      }
    },
    ".app_folder": {
      "field_description": "Path to stand-alone app root folder.",
      "field_metadata": {
        "cli_group": "A",
        "cli_flags": [ "--app" ],
        "cli_help": "path to stand-alone app folder"
      }
    },
    ".verbose": {
      "field_description": "Toggle to enable/disable lab messages.",
      "default_value": true,
      "field_metadata": {
          "cli_flags": [ "-q", "--quiet" ],
          "cli_help": "turn off lab process messages"
      }
    },
    ".all": {
      "field_description": "Apply action to all services in registry.",
      "default_value": false,
      "field_metadata": {
        "cli_flags": [ "-a", "--all" ],
        "cli_help": "apply to all services in registry"
      }
    },
    ".overwrite": {
      "field_description": "Overwrites the existing resource.",
      "default_value": false,
      "field_metadata": {
        "cli_flags": [ "-f", "--force" ],
        "cli_help": "overwrite the existing resource"
      }
    },
    ".init_heroku": {
      "field_description": "Include heroku config file in credentials.",
      "default_value": false,
      "field_metadata": {
        "cli_flags": [ "--heroku" ],
        "cli_help": "add heroku config to .lab folder"
      }
    },
    ".init_aws": {
      "field_description": "Include aws config file in credentials.",
      "default_value": false,
      "field_metadata": {
        "cli_flags": [ "--aws" ],
        "cli_help": "add aws config to .lab folder"
      }
    },
    ".print_path": {
      "field_description": "Prints out path to terminal.",
      "default_value": false,
      "field_metadata": {
          "cli_flags": [ "--print" ],
          "cli_help": "prints path of service root"
      }
    },
    ".paginate": {
      "field_description": "Break up results into separate results.",
      "default_value": false,
      "field_metadata": {
        "cli_flags": [ "--more" ],
        "cli_help": "paginate results longer than console height"
      }
    }
  }
}